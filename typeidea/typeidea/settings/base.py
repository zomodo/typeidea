"""
Django settings for typeidea project.

Generated by 'django-admin startproject' using Django 1.11.26.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ksn0x(fh6ke6m1jz^u4)!3vh(yt#8)++&3ycxua0@+b6&$g31_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'typeidea',
    'blog',
    'config',
    'comment',

    'xadmin',           # xadmin主体模块
    'crispy_forms',     # 渲染表格模块

    'dal',              # django-autocomplete-light模块
    'dal_select2',

    'ckeditor',         # 富文本编辑器
    'ckeditor_uploader',    # 富文本编辑器中上传图片配置

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'blog.middleware.user_id.UserIDMiddleware', # 给访问用户做标记

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'typeidea.urls'

# 修改了templates的路径，如果修改样式可以直接新加一个目录，然后修改THEME路径
THEME='bootstrap'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'themes',THEME,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'typeidea.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# 添加如下代码可以在日志栏打印执行的SQL语句
"""
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'propagate': True,
            'level':'DEBUG',
        },
    }
}
"""

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# STATIC_URL是配置页面上静态资源的起始路径
STATIC_URL = '/static/'

# STATIC_ROOT是配置部署之后的静态资源路径
STATIC_ROOT = '/tmp/static'

# STATICFILES_DIRS是指定静态资源所在的目录，这里的THEME是上方templates模板中定义的
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'themes',THEME,'static'),
]

# ckeditor配置图片上传路径
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media')
CKEDITOR_UPLOAD_PATH='article_images'


# 导入xadmin之后，可以在这里修改系统名称和footer内容
XADMIN_TITLE='Typeidea管理后台'
XADMIN_FOOTER_TITLE='power by zomodo'


# 配置ckeditor富文本编辑器的参数
CKEDITOR_CONFIG={
    'default':{
        'toolbar':'full',
        'height':300,
        'width':800,
        'tabSpaces':4,
        'extraPlugins':'codesnippet',   # 配置代码插件
    },
}

# 修改默认的存储引擎，自定义的storage，给图片加水印
DEFAULT_FILE_STORAGE='typeidea.storage.WatermarkStorage'